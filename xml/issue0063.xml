<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="63" status="WP">
<title>
N4152 uncaught_exceptions, N3614 unwinding_exception
</title>
<section><sref ref="[except.special]"/></section>
<submitter>Herb Sutter</submitter>
<date>11 Mar 2013</date>

<discussion>
<p>
<a href="http://open-std.org/JTC1/SC22/WG21/docs/papers/2014/n4152.pdf">http://open-std.org/JTC1/SC22/WG21/docs/papers/2014/n4152.pdf</a>
</p>
<p>
<a href="http://open-std.org/JTC1/SC22/WG21/docs/papers/2013/n3614.pdf">http://open-std.org/JTC1/SC22/WG21/docs/papers/2013/n3614.pdf</a>
</p>
<p>
Bristol 2013: Voutilainen pointed out that there are previous proposals on similar facilities (http://open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2952.html), and that there's existing practice that is different from this proposal (existing practice returns an int, not a bool). Stroustrup thought that he would need convincing examples about the int, and thought that the facility in general needs better motivation. Voutilainen said that it would be best to create a revisions/synthesis paper that covers the existing practice and the previous proposals and improves the motivational examples. 
</p>
<p>
Author is encouraged to revise.
</p>
<p>
In Chicago 2013, Voutilainen said he plans to work on this issue and create
a follow-up paper for C++17.
</p>
<p>
Adopted into the working draft in Urbana, as N4259.
</p>
</discussion>
</issue>
