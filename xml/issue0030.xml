<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="30" status="Open">
<title>
[tiny] Efficient/Flexible Access to Argument Packs
</title>
<section><sref ref="[temp.variadic]"/></section>
<submitter>Dave Abrahams</submitter>
<date>16 Oct 2012</date>

<discussion>
<p>
There are lots of very basic manipulations that are either really hard
or impossible to do with argument packs unless you use something that
causes a big recursive template instantiation, which is expensive at
compile-time and can cause bad error messages.  I want to be able to
index argument packs with integral constant expressions, "take" or
"drop" the first N elements of the pack, etc.
</p>
<p>
In Bristol 2013: N3493 may solve parts of the problem. The submitter is encouraged to write a paper, and practical examples are desirable. 
</p>
<p>N3761 <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3761.html">http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3761.html</a> seems related.
</p>
<p>
Discussed in Rapperswil 2014. Vandevoorde expressed desire to write a paper.
</p>
<p>The work done by George Makrydakis at <a href="https://github.com/irrequietus/atpp">https://github.com/irrequietus/atpp</a> is related.</p>
</discussion>

</issue>
