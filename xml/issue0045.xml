<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="45" status="Resolved">
<title>
[tiny] Type Trait is_range&lt;T&gt;
</title>
<section><sref ref="[meta.unary.prop]"/></section>
<submitter>Nevin Liber</submitter>
<date>05 Feb 2013</date>

<discussion>
<p>
I'd like to have an is_range&lt;T, R = void&gt; type trait, which derives from true_type if and only if T can be used in range-based for, and *__begin is convertible to R (where R == void means don't bother checking this condition).
</p>
<p>
Bristol 2013: Submitter is encouraged to proceed and present to LWG. Apparently LEWG doesn't handle these. 
</p>
<p>
Filed as <a href="https://issues.isocpp.org/show_bug.cgi?id=41">LEWG Bug 41</a>, closing as Resolved on the EWG side.
</p>
</discussion>
</issue>
